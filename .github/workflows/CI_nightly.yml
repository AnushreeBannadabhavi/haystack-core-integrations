name: nightly

on:
  workflow_dispatch: # Activate this workflow manually
  schedule:
    - cron: "0 0 * * *"
  # TODO: rm the following event
  push:
    branches:
      - nightly

permissions:
  id-token: write
  contents: read

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"
  AWS_REGION: us-east-1      

jobs:
  run:
    name: Python ${{ matrix.python-version }} on ${{ startsWith(matrix.os, 'macos-') && 'macOS' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10']

    steps:
      - name: Support longpaths
        if: matrix.os == 'windows-latest'
        working-directory: .
        run: git config --system core.longpaths true

      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Hatch
        run: pip install --upgrade hatch

      - name: AWS authentication
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}        

      - name: Run tests
        run: |
          if [ "${{ runner.os }}" = "Windows" ]; then
            Get-ChildItem -Directory "integrations" | ForEach-Object {
              if ($_.Name -ne "prova") {
                Set-Location $_.FullName
                hatch run cov
                hatch env prune # clean up the environment after docs generation
                Set-Location ..
              }
            }
          else
            for d in integrations/* ; do
              if [ "$(basename $d)" != "prova" ]; then
                cd $d
                hatch run cov
                hatch env prune # clean up the environment after docs generation
                cd -
              fi
            done
          fi
                 